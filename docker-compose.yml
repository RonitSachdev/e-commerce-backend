version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:7.0
    container_name: ecommerce-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ecommerce
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Service
  api:
    build: .
    container_name: ecommerce-api
    restart: unless-stopped
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      DB_NAME: ecommerce
      JWT_SECRET: your_super_secret_jwt_key_change_in_production
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/products"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: MongoDB Express (Web-based MongoDB admin interface)
  mongo-express:
    image: mongo-express:latest
    container_name: ecommerce-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - ecommerce-network

volumes:
  mongodb_data:
    driver: local

networks:
  ecommerce-network:
    driver: bridge 